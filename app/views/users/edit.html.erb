<h1>Edit Password</h1>

<%= form_with(model: @user, url: user_path(@user), method: :patch) do |form| %>
  <head>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  </head>
  <% if @user.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(@user.errors.count, "error") %> prohibited this password from being saved:</h2>

      <ul>
        <% @user.errors.full_messages.each do |error| %>
          <li><%= error %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= form.label :current_password %>
  <%= form.password_field :current_password %>

  <div>
    <%= form.label :password, style: "display: block" %>
    <%= form.password_field :password, id: "password-field" %>  
  </div>

  <div id="password-strength-container" style="display: none;">
    <p>Password Strength: <span id="password-strength"></span></p>
  </div>

  <div>
    <%= form.label :password_confirmation, style: "display: block" %>
    <%= form.password_field :password_confirmation %>
  </div>

  <div>
    <%= form.submit "Change Password" %>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      $('#password-field').on('input', function() {
        var password = $(this).val();
        var strength = calculatePasswordStrength(password);
        $('#password-strength').text(strength);
        $('#password-strength-container').show();
      });

      function calculatePasswordStrength(password) {
        let score = 0;

        if (password.length >= 8) score += 2;

        if (/[a-z]/.test(password) && /[A-Z]/.test(password)) score += 2;
        if (/\d/.test(password)) score += 2;
        if (/[!@#\$%\^&\*]/.test(password)) score += 2;

        const entropy = calculateShannonEntropy(password);
        const entropyScore = Math.min(2, entropy / 4.0);
        score += Math.round(entropyScore * 2);

        const strength = Math.round((score / 10.0) * 10);
        return `${strength}/10`;
      }

      function calculateShannonEntropy(input) {
        const uniqueCharacters = new Set(input);
        const inputLength = input.length;
        let entropy = 0;

        uniqueCharacters.forEach(char => {
          const frequency = input.split(char).length - 1;
          const probability = frequency / inputLength;
          entropy -= probability * Math.log2(probability);
        });

        return entropy;
      }
    });
  </script>
<% end %>
